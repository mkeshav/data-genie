version: 2.1
jobs:
  test:
    machine: true
    working_directory: ~/data-genie

    steps:
      - checkout
      - run:
          name: Install Docker Compose
          command: |
            sudo curl -L "https://github.com/docker/compose/releases/download/v2.40.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose

      - run:
          name: Tox (tests across python versions)
          command: |
            docker-compose run --rm test bash -c "tox"

  type_check:
    machine: true
    steps:
      - checkout
      - run:
          name: Install Docker Compose
          command: |
            sudo curl -L "https://github.com/docker/compose/releases/download/v2.40.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose

      - run:
          name: Mypy Check
          command: |
            docker-compose run --rm test bash -c "mypy genie_pkg"

  code_quality:
    machine: true
    steps:
      - checkout
      - run:
          name: Install Docker Compose
          command: |
            sudo curl -L "https://github.com/docker/compose/releases/download/v2.40.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose

      - run:
          name: Codacy
          command: |
            docker-compose run --rm test ./codacy.sh

  smoke_test:
    machine: true
    steps:
      - checkout
      - run:
          name: Install Docker Compose
          command: |
            curl -L https://github.com/docker/compose/releases/download/1.24.0/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose

      - run:
          name: Smoke Test Package
          command: |
            docker-compose run --rm smoke_test ./smoke_test.py

  package_pypi_upload:
    machine: true
    steps:
      - checkout
      - run:
          name: Install Docker Compose
          command: |
            curl -L https://github.com/docker/compose/releases/download/1.24.0/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose

      - run:
          name: Upload to pypi
          command: |
            docker-compose run --rm test ./upload_pypi

workflows:
  version: 2
  scan-test-upload:
    jobs:
      - test  # your custom job from your config, that builds your code
      - code_quality
      - type_check
      - hold: # <<< A job that will require manual approval in the CircleCI web application.
          type: approval # <<< This key-value pair will set your workflow to a status of "On Hold"
          requires: # We only run the "hold" job when test2 has succeeded
            - type_check
            - test
          filters:
            branches:
              only:
                - master
      # On approval of the `hold` job, any successive job that requires the `hold` job will run.
      # In this case, a user is manually triggering the deploy job.
      - package_pypi_upload:
          requires:
            - hold
          filters:
            branches:
              only:
                - master
      - smoke_test:
          requires:
            - package_pypi_upload
          filters:
            branches:
              only:
                - master
